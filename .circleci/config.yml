version: 2

image: &image
    docker:
      - image: gentoo/stage3:systemd-20201118
    environment:
      target: "Z390"


setup_env: &setup_env
    name: Prepare env
    command: |
      env-update && source /etc/profile
      emerge-webrsync
      eselect profile set default/linux/amd64/17.1
      emerge -q dev-vcs/git
      emerge --unmerge sys-apps/systemd

      git clone https://github.com/pgrandin/stage4.git /root/project/
      cd /root/project
      git checkout config_based
      rsync -vrtza files/Z390/ /

      # Do it once more to have proper portage path
      env-update && source /etc/profile
      emerge-webrsync
      eselect profile set default/linux/amd64/17.1


jobs:
  build_kernel:
    <<: *image
    steps:
      - attach_workspace:
            at: /usr/portage
      - run: *setup_env
      - run:
          name: Build kernel
          command: |
            emerge -q eix jq
            eix-update

            wget -q https://github.com/pgrandin/kernel-configs/archive/master.zip -O /tmp/kernel-configs.zip
            pushd /tmp/
            unzip kernel-configs.zip
            popd

            kversion=$(eix gentoo-source|awk -F'[()]' '/ [~]5.8/ {version=$2} END{print version}')

            echo "=sys-kernel/gentoo-sources-$kversion ~amd64" > /etc/portage/package.keywords/gentoo-sources

            MAKEOPTS="-j$(nproc)" FEATURES="-getbinpkg" emerge -q =gentoo-sources-$kversion

            cd /usr/src/linux
            cat arch/x86/configs/x86_64_defconfig /tmp/kernel-configs-master/common_defconfig > arch/x86/configs/${target}_defconfig

            confs=$(cat /root/project/config.json | jq --arg HOST target -r '.configs[] | select (.["host"]==$HOST) | .kernel_configs |.[]' )
            for conf in $confs; do
                cat /tmp/kernel-configs-master/${conf}_defconfig >> arch/x86/configs/${target}_defconfig
            done
            cat /tmp/kernel-configs-master/${target}_defconfig >> arch/x86/configs/${target}_defconfig
            make defconfig ${target}_defconfig
            make -j$(nproc)
            make modules_install

  build_llvm:
    <<: *image
    steps:
      - attach_workspace:
            at: /tmp/portage
      - run: *setup_env
      - run:
          name: Build llvm
          command: |
            MAKEOPTS="-j2" emerge -1 llvm
            rsync -vrtza /usr/portage/packages/ packages/
            rm packages/Packages
      - persist_to_workspace:
          root: .
          paths:
            - ./packages

  build_boost:
    <<: *image
    steps:
      - attach_workspace:
            at: /usr/portage
      - run: *setup_env
      - run:
          name: Build boost
          command: |
            MAKEOPTS="-j2" emerge -1 dev-libs/boost
            rsync -vrtza /usr/portage/packages/ packages/
            rm packages/Packages
      - persist_to_workspace:
          root: .
          paths:
            - ./packages

  synchronize_steps:
    <<: *image
    steps:
      - attach_workspace:
            at: /usr/portage
      - run: *setup_env
      - run:
          name: Synchronize package
          command: |
            emaint binhost --fix
            rsync -vrtza --delete /usr/portage/packages -e "ssh -o StrictHostKeyChecking=no" ubuntu@packages.kazer.org:/packages/$target/

  build_system:
    <<: *image
    steps:
      - attach_workspace:
            at: /usr/portage
      - run: *setup_env
      - run:
          name: Build @system
          command: |
            emerge -NDuq libudev # for elogind
            MAKEOPTS="-j$(nproc)" emerge -NDuq @system
            rsync -vrtza --delete /usr/portage/packages -e "ssh -o StrictHostKeyChecking=no" ubuntu@packages.kazer.org:/packages/$target/

  build_world:
    <<: *image
    steps:
      - attach_workspace:
            at: /usr/portage
      - run: *setup_env
      - run:
          name: Build partial @world
          command: |
            MAKEOPTS="-j$(nproc)" emerge -NDuq @world --exclude "media-gfx/gscan2pdf media-tv/kodi media-gfx/imagemagick dev-lang/go sys-devel/llvm"
            rsync -vrtza --delete /usr/portage/packages -e "ssh -o StrictHostKeyChecking=no" ubuntu@packages.kazer.org:/packages/$target/

workflows:
  version: 2
  main:
    jobs:
      - build_kernel
      - build_llvm
      - build_boost
      - synchronize_steps:
          requires:
              - build_llvm
              - build_boost
      - build_system:
          requires:
            - synchronize_steps
      - build_world:
          requires:
            - build_system