version: 2.1

image: &image
    docker:
      - image: gentoo/stage3:systemd-20201118
    environment:
      target: "R710"
      FEATURES: "-sandbox -usersandbox"


setup_env: &setup_env
    name: Prepare env
    command: |
      emerge -q dev-vcs/git eix jq
      eix-update

      git clone https://github.com/pgrandin/stage4.git /root/project/
      cd /root/project
      git checkout config_based
      rsync -vrtza files/${target}/ /
      rsync -vrtza ubuntu@packages.kazer.org:/packages/$target/binpkgs/ /var/cache/binpkgs/ -e "ssh -o StrictHostKeyChecking=no"

upload_packages: &upload_packages
    name: Upload packages
    command: |
      if [[ -d "/var/cache/binpkgs/binpkgs/" ]]; then
        mv /var/cache/binpkgs/binpkgs/* /var/cache/binpkgs/
        rmdir /var/cache/binpkgs/binpkgs
      fi
      rsync -vrtza ubuntu@packages.kazer.org:/packages/$target/binpkgs/ /var/cache/binpkgs/ -e "ssh -o StrictHostKeyChecking=no"
      emaint binhost --fix
      rsync -vrtza --delete /var/cache/binpkgs -e "ssh -o StrictHostKeyChecking=no" ubuntu@packages.kazer.org:/packages/$target/

jobs:
  emerge_sync:
    <<: *image
    steps:
      - attach_workspace:
            at: /var/db/repos/
      - run:
          name: emerge-webrsync
          command: |
            emerge-webrsync
      - persist_to_workspace:
          root: /var/db/repos/
          paths:
            - ./gentoo

  build_kernel:
    <<: *image
    steps:
      - attach_workspace:
            at: /var/db/repos/
      - run: *setup_env
      - run:
          name: Prepare kernel build
          command: |
            git clone https://github.com/pgrandin/kernel-configs.git /tmp/kernel-configs-master/
            pushd /tmp/kernel-configs-master/
            kconfig_sha=$(git rev-parse HEAD)
            popd

            kversion=$(eix gentoo-source|awk -F'[()]' '/ [~]5.10/ {version=$2} END{print version}')
            echo "${kversion}-${kconfig_sha}" > kernel-config.txt
            cp kernel-config.txt /var/db/repos/kernel-config.txt # for workspace persistence
            cat /var/db/repos/kernel-config.txt

      - restore_cache:
          key: kernel-v1-{{ checksum "/var/db/repos/kernel-config.txt" }}
      - run:
          name: Build kernel
          command: |
            kversion=$(eix gentoo-source|awk -F'[()]' '/ [~]5.10/ {version=$2} END{print version}')

            if [[ -e "/usr/src/linux-${kversion}-gentoo/arch/x86_64/boot/bzImage" ]]; then
              echo "Found kernel from cache, skipping compilation"
            else
              mkdir /etc/portage/package.keywords/
              echo "=sys-kernel/gentoo-sources-$kversion ~amd64" > /etc/portage/package.keywords/gentoo-sources
              MAKEOPTS="-j$(nproc)" FEATURES="-getbinpkg" emerge -q =gentoo-sources-$kversion

              cd /usr/src/linux
              cat arch/x86/configs/x86_64_defconfig /tmp/kernel-configs-master/common_defconfig > arch/x86/configs/${target}_defconfig

              confs=$(cat /root/project/config.json | jq --arg HOST target -r '.configs[] | select (.["host"]==$HOST) | .kernel_configs |.[]' )
              for conf in $confs; do
                  cat /tmp/kernel-configs-master/${conf}_defconfig >> arch/x86/configs/${target}_defconfig
              done
              cat /tmp/kernel-configs-master/${target}_defconfig >> arch/x86/configs/${target}_defconfig
              make defconfig ${target}_defconfig
              make -j$(nproc)
            fi
      - save_cache:
          paths:
            - /usr/src/
          key: kernel-v1-{{ checksum "/var/db/repos/kernel-config.txt" }}
      - persist_to_workspace:
          root: /var/db/repos/
          paths:
            - ./kernel-config.txt


  build_package:
    <<: *image
    parameters:
      package:
        type: string
    steps:
      - attach_workspace:
            at: /var/db/repos/
      - run: *setup_env
      - run:
          name: Build one package
          command: |
            package=<< parameters.package >>
            atom="${package/\*-/:}"
            atom="${atom/\*/}"
            atom="${atom/\./}"
            category=$(echo $package | cut -d'/' -f1)
            echo "$package -> $atom -> $category"

            MAKEOPTS="-j4" emerge -1 ${atom}
            rsync -vrtza --delete /var/cache/binpkgs/${package} -e "ssh -o StrictHostKeyChecking=no" ubuntu@packages.kazer.org:/packages/$target/binpkgs/${category}/


  build_package_deps:
    <<: *image
    parameters:
      package:
        type: string
    steps:
      - attach_workspace:
            at: /var/db/repos/
      - run: *setup_env
      - run:
          name: Build one package deps
          command: |
            env -u target MAKEOPTS="-j$(nproc)" emerge -NDuqo << parameters.package >>
      - run: *upload_packages


  build_system:
    <<: *image
    steps:
      - attach_workspace:
            at: /var/db/repos/
      - run: *setup_env
      - restore_cache:
          key: kernel-v1-{{ checksum "/var/db/repos/kernel-config.txt" }}
      - run:
          name: Build @system
          command: |
            emerge -uq libudev # for elogind
            MAKEOPTS="-j$(nproc)" emerge -NDuq @system --jobs $(nproc)
          no_output_timeout: 90m
      - run: *upload_packages

  build_set1:
    <<: *image
    steps:
      - attach_workspace:
            at: /var/db/repos/
      - run: *setup_env
      - restore_cache:
          key: kernel-v1-{{ checksum "/var/db/repos/kernel-config.txt" }}
      - run:
          name: Build partial @world 1/2
          command: |
            emerge -q1 dev-lang/perl
            FEATURES="-getbinpkg" emerge -q1 XML-Parser
            perl-cleaner --reallyall
            env -u target MAKEOPTS="-j$(nproc)" emerge -NDuq dev-util/pycharm-community
      - run: *upload_packages
      - run:
          name: Build partial @world 2/2
          command: |
            env -u target MAKEOPTS="-j$(nproc)" emerge -NDuq app-emulation/virt-manager
      - run: *upload_packages

  build_firefox:
    <<: *image
    steps:
      - attach_workspace:
            at: /var/db/repos/
      - run: *setup_env
      - restore_cache:
          key: kernel-v1-{{ checksum "/var/db/repos/kernel-config.txt" }}
      - run:
          name: Build Firefox
          command: |
            env -u target MAKEOPTS="-j$(nproc)" emerge -NDuq www-client/firefox mail-client/thunderbird
      - run: *upload_packages


  build_chromium:
    <<: *image
    steps:
      - attach_workspace:
            at: /var/db/repos/
      - run: *setup_env
      - restore_cache:
          key: kernel-v1-{{ checksum "/var/db/repos/kernel-config.txt" }}
      - run:
          name: Build partial @world
          command: |
            env -u target MAKEOPTS="-j4" emerge -NDu www-client/chromium
      - run: *upload_packages

workflow_jobs: &workflow_jobs
    jobs:
      - emerge_sync
      - build_kernel:
          requires:
            - emerge_sync
      - build_package:
          requires:
            - emerge_sync
          matrix:
            parameters:
              package: ["sys-devel/llvm*-10.*", "sys-devel/llvm*-11.*", "dev-lang/rust*", "net-libs/nodejs*", "dev-libs/boost*", "sys-devel/clang*"]
      - build_system:
          requires:
            - build_package
            - build_kernel
      - build_set1:
          requires:
            - build_system
      - build_package_deps:
          requires:
            - build_set1
          matrix:
            parameters:
              package: ["www-client/firefox", "www-client/chromium"]
      - build_firefox:
          requires:
            - build_package_deps-www-client/firefox
      - build_chromium:
          requires:
            - build_package_deps-www-client/chromium
workflows:
  version: 2
  main:
    <<: *workflow_jobs
  nightly:
    triggers:
      - schedule:
          cron: "32 13 * * *"
          filters:
            branches:
              only:
                - config_based
    <<: *workflow_jobs
